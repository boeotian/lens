<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7987774D-17A7-4E76-AE13-C03F2CC31B9C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Lens</RootNamespace>
    <AssemblyName>Lens</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\x86\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <CodeAnalysisLogFile>bin\Debug\Lens.SyntaxTree.dll.CodeAnalysisLog.xml</CodeAnalysisLogFile>
    <CodeAnalysisUseTypeNameInSuppression>true</CodeAnalysisUseTypeNameInSuppression>
    <CodeAnalysisModuleSuppressionsFile>GlobalSuppressions.cs</CodeAnalysisModuleSuppressionsFile>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSetDirectories>;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\\Rule Sets</CodeAnalysisRuleSetDirectories>
    <CodeAnalysisIgnoreBuiltInRuleSets>true</CodeAnalysisIgnoreBuiltInRuleSets>
    <CodeAnalysisRuleDirectories>;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\FxCop\\Rules</CodeAnalysisRuleDirectories>
    <CodeAnalysisIgnoreBuiltInRules>true</CodeAnalysisIgnoreBuiltInRules>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
    <OutputPath>bin\x86\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <CodeAnalysisLogFile>bin\Release\Lens.SyntaxTree.dll.CodeAnalysisLog.xml</CodeAnalysisLogFile>
    <CodeAnalysisUseTypeNameInSuppression>true</CodeAnalysisUseTypeNameInSuppression>
    <CodeAnalysisModuleSuppressionsFile>GlobalSuppressions.cs</CodeAnalysisModuleSuppressionsFile>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSetDirectories>;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\\Rule Sets</CodeAnalysisRuleSetDirectories>
    <CodeAnalysisIgnoreBuiltInRuleSets>true</CodeAnalysisIgnoreBuiltInRuleSets>
    <CodeAnalysisRuleDirectories>;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\FxCop\\Rules</CodeAnalysisRuleDirectories>
    <CodeAnalysisIgnoreBuiltInRules>true</CodeAnalysisIgnoreBuiltInRules>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|AnyCPU'">
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Compiler\Context.Compilation.cs" />
    <Compile Include="Compiler\Context.Import.cs" />
    <Compile Include="Compiler\Context.SafeMode.cs" />
    <Compile Include="Compiler\Context.Stdlib.cs" />
    <Compile Include="Compiler\Entities\EntityNames.cs" />
    <Compile Include="Compiler\Entities\TypeEntity.Autogeneration.cs" />
    <Compile Include="Compiler\Entities\TypeEntity.Structure.cs" />
    <Compile Include="Compiler\Entities\TypeEntityKind.cs" />
    <Compile Include="Compiler\SafeMode.cs" />
    <Compile Include="Compiler\SafeModeSubsystem.cs" />
    <Compile Include="Compiler\ScopeFrame.cs" />
    <Compile Include="LensCompiler.cs" />
    <Compile Include="LensCompilerOptions.cs" />
    <Compile Include="Compiler\Entities\ConstructorEntity.cs" />
    <Compile Include="Compiler\Context.cs" />
    <Compile Include="Compiler\Context.Lookup.cs" />
    <Compile Include="Compiler\Context.Structure.cs" />
    <Compile Include="Compiler\GlobalPropertyHelper.cs" />
    <Compile Include="Compiler\EmitterExtensions.cs" />
    <Compile Include="Compiler\ExtensionMethodResolver.cs" />
    <Compile Include="Compiler\Entities\FieldEntity.cs" />
    <Compile Include="Compiler\GenericHelper.cs" />
    <Compile Include="Compiler\Entities\MethodEntityBase.cs" />
    <Compile Include="Compiler\Entities\MethodEntity.cs" />
    <Compile Include="Compiler\Scope.cs" />
    <Compile Include="Compiler\Entities\TypeContentsBase.cs" />
    <Compile Include="Compiler\Entities\TypeEntity.cs" />
    <Compile Include="Compiler\TypeResolver.cs" />
    <Compile Include="Compiler\Wrappers.cs" />
    <Compile Include="IScript.cs" />
    <Compile Include="LensCompilerException.cs" />
    <Compile Include="Lexer\LensLexer.cs" />
    <Compile Include="Lexer\LensLexer.Utils.cs" />
    <Compile Include="Lexer\Lexem.cs" />
    <Compile Include="Lexer\LexemType.cs" />
    <Compile Include="Lexer\RegexLexemDefinition.cs" />
    <Compile Include="Lexer\StaticLexemDefinition.cs" />
    <Compile Include="Parser\LensParser.cs" />
    <Compile Include="Parser\LensParser.Utils.cs" />
    <Compile Include="Stdlib\ConsoleWrapper.cs" />
    <Compile Include="Stdlib\Utilities.cs" />
    <Compile Include="Stdlib\Randomizer.cs" />
    <Compile Include="SyntaxTree\ControlFlow\ForeachNode.cs" />
    <Compile Include="SyntaxTree\Internals\GetArgumentNode.cs" />
    <Compile Include="SyntaxTree\Operators\BitOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\ShiftOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\XorOperatorNode.cs" />
    <Compile Include="Translations\CompilerMessages.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>CompilerMessages.resx</DependentUpon>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="SyntaxTree\ControlFlow\CatchNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\CodeBlockNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\IfNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\LambdaNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\RecordDefinitionNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\ThrowNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\TypeDefinitionNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\TypeDefinitionNodeBase.cs" />
    <Compile Include="SyntaxTree\ControlFlow\UsingNode.cs" />
    <Compile Include="SyntaxTree\Expr.cs" />
    <Compile Include="SyntaxTree\Expressions\GetIdentifierNode.cs" />
    <Compile Include="SyntaxTree\Expressions\GetIndexNode.cs" />
    <Compile Include="SyntaxTree\Expressions\GetMemberNode.cs" />
    <Compile Include="SyntaxTree\Expressions\IdentifierNodeBase.cs" />
    <Compile Include="SyntaxTree\Expressions\IndexNodeBase.cs" />
    <Compile Include="SyntaxTree\Expressions\InvocationNode.cs" />
    <Compile Include="SyntaxTree\Expressions\MemberNodeBase.cs" />
    <Compile Include="SyntaxTree\Expressions\SetIdentifierNode.cs" />
    <Compile Include="SyntaxTree\Expressions\SetIndexNode.cs" />
    <Compile Include="SyntaxTree\Expressions\SetMemberNode.cs" />
    <Compile Include="SyntaxTree\Expressions\ValueListNodeBase.cs" />
    <Compile Include="SyntaxTree\Expressions\AccessorNodeBase.cs" />
    <Compile Include="SyntaxTree\Literals\NullNode.cs" />
    <Compile Include="SyntaxTree\Interfaces.cs" />
    <Compile Include="SyntaxTree\Internals\ThisNode.cs" />
    <Compile Include="SyntaxTree\Operators\AddOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\BooleanOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\CastOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\DefaultOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\DivideOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\ComparisonOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\InversionOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\IsOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\NegationOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\MultiplyOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\OperatorNodeBase.cs" />
    <Compile Include="SyntaxTree\Operators\PowOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\RemainderOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\SubtractOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\TypeofOperatorNode.cs" />
    <Compile Include="SyntaxTree\Operators\TypeOperatorNodeBase.cs" />
    <Compile Include="SyntaxTree\Operators\UnaryOperatorNodeBase.cs" />
    <Compile Include="Compiler\FunctionArgument.cs" />
    <Compile Include="SyntaxTree\ControlFlow\FunctionNodeBase.cs" />
    <Compile Include="SyntaxTree\ControlFlow\FunctionNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\LetNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\WhileNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\NameDeclarationNodeBase.cs" />
    <Compile Include="SyntaxTree\ControlFlow\TryNode.cs" />
    <Compile Include="SyntaxTree\ControlFlow\VarNode.cs" />
    <Compile Include="SyntaxTree\Expressions\InvocationNodeBase.cs" />
    <Compile Include="SyntaxTree\Expressions\NewArrayNode.cs" />
    <Compile Include="SyntaxTree\Expressions\NewDictionaryNode.cs" />
    <Compile Include="SyntaxTree\Expressions\NewListNode.cs" />
    <Compile Include="SyntaxTree\Expressions\NewObjectNode.cs" />
    <Compile Include="SyntaxTree\Expressions\NewTupleNode.cs" />
    <Compile Include="SyntaxTree\Literals\BooleanNode.cs" />
    <Compile Include="SyntaxTree\Literals\DoubleNode.cs" />
    <Compile Include="SyntaxTree\Literals\IntNode.cs" />
    <Compile Include="SyntaxTree\Literals\LiteralNodeBase.cs" />
    <Compile Include="SyntaxTree\Literals\StringNode.cs" />
    <Compile Include="SyntaxTree\Literals\UnitNode.cs" />
    <Compile Include="SyntaxTree\NodeBase.cs" />
    <Compile Include="SyntaxTree\Operators\BinaryOperatorNodeBase.cs" />
    <Compile Include="Translations\LexerMessages.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>LexerMessages.resx</DependentUpon>
    </Compile>
    <Compile Include="Translations\ParserMessages.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ParserMessages.resx</DependentUpon>
    </Compile>
    <Compile Include="Utils\Annotations.cs" />
    <Compile Include="Utils\DictionaryExtensions.cs" />
    <Compile Include="SyntaxTree\LocationEntity.cs" />
    <Compile Include="Compiler\TypeSignature.cs" />
    <Compile Include="Unit.cs" />
    <Compile Include="Utils\EnumerableExtensions.cs" />
    <Compile Include="Utils\FunctionalHelper.cs" />
    <Compile Include="Utils\HashList.cs" />
    <Compile Include="SyntaxTree\LexemLocation.cs" />
    <Compile Include="Compiler\LocalName.cs" />
    <Compile Include="Utils\NodeChild.cs" />
    <Compile Include="Utils\TypeExtensions.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Grammar\Grammar.v1.txt" />
    <Content Include="Grammar\Grammar.v2.txt" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Translations\CompilerMessages.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>CompilerMessages.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <EmbeddedResource Include="Translations\CompilerMessages.ru.resx" />
    <EmbeddedResource Include="Translations\LexerMessages.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>LexerMessages.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Include="Translations\LexerMessages.ru.resx" />
    <EmbeddedResource Include="Translations\ParserMessages.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>ParserMessages.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <EmbeddedResource Include="Translations\ParserMessages.ru.resx" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>